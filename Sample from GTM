import React, { Component } from "react";
import { connect } from "react-redux";
import CardList from "../components/cardlist";
import SearchBox from "../components/SearchBox";
import Scroll from "../components/scroll";
import "./App.css";

import { setSearchField } from "../action";

class App extends Component {
  constructor(props) {
    super();
    this.state = {
      robots: []
      //searchfield: ''
    };
  }

  componentDidMount() {
    fetch("https://jsonplaceholder.typicode.com/users")
      .then(response => response.json())
      .then(users => this.setState({ robots: users, filterRobots: users }));
  }

  onSearchChange = event => {
    console.log("onSearchChange", event.target.value);
    //this.setState({ searchfield: event.target.value })
    this.props.onSearchChange(event.target.value);
  };

  render() {
    const filteredRobots = this.state.robots.filter(robot =>
      robot.name.toLowerCase().includes(this.props.searchField.toLowerCase())
    );

    return (
      <>
        {this.state.robots.length === 0 && <h1>Loading</h1>}
        <div className="tc">
          <h1 className="f1">RoboFriends</h1>
          <SearchBox searchChange={this.onSearchChange} />
          {filteredRobots.length > 0 && (
            <Scroll>
              <CardList robots={filteredRobots} />
            </Scroll>
          )}
        </div>
      </>
    );
  }
}

const mapStateToProps = state => {
  return {
    searchField: state.searchField
  };
};

const mapDispatchToProps = dispatch => {
  return {
    onSearchChange: text => dispatch(setSearchField(text))
  };
};

export default connect(
  mapStateToProps,
  mapDispatchToProps
)(App);
